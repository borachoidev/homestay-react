<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitcamp.korea_tour.model.mapper.JoinPlaceMapper">
   <select id="getTotalPlaceMark" parameterType="int" resultType="joinplacemark">
    SELECT  m.markNum, p.title, p.contentId, p.addr1, p.addr2, p.mapX, p.mapY,
     p.areaCode, p.linkedURL, p.firstImage, p.mlevel
     FROM place p LEFT JOIN placeMark m ON p.contentId=m.contentId
        WHERE userNum=#{loginNum}
   </select>
   <select id="getTotalCountMyPlaceMark" parameterType="int" resultType="int">
      select count(*) from placeMark where userNum=#{loginNum}
   </select>
   <!-- 관광지main : 랜덤으로 상위 4곳만 출력-->
   <select id="getFourDatasByRandom" parameterType="int" resultType="place">
      select * from place where areaCode=#{areaCode} order by rand() limit 4
   </select>
   
   <!-- 관광지list : 지역태그검색 -->
   <select id="getTotalCount" resultType="int"> <!-- 관광지 개수출력 -->
      select count(*) from place
   </select>
   <select id="getTotalCountInArea" parameterType="int" resultType="int"> <!-- 지역태그 선택시 관광지 개수 출력 -->
      select count(*) from place where areaCode=#{areaCode}
   </select>
   <!-- 제목순/좋아요순/지역태그 : param={"order" : "like"or"title", "areaCode":areacode or 100(전체)} -->
   <select id="searchPlaceByTitleInArea" parameterType="hashmap" resultType="joinPlaceList"> <!-- 제목순,지역태그 --> 
      select p.contentId,p.title,p.overview,p.addr1,p.addr2,p.mapX,p.mapY,p.mLevel,p.areaCode,p.linkedURL,p.firstImage,l.likeCount 
       from place p left join (select contentId, count(loginNum) as likeCount from placeLike group by contentId) l on p.contentId=l.contentId 
       where p.areaCode=#{areaCode} ORDER BY (CASE 
      WHEN SUBSTRING(title,1) BETWEEN '가' AND '힣' THEN 1 
      WHEN ASCII(SUBSTRING(title,1)) BETWEEN 65 AND 90 THEN 2 
      WHEN ASCII(SUBSTRING(title,1)) BETWEEN 97 AND 122 THEN 3 
      WHEN ASCII(SUBSTRING(title,1)) BETWEEN 48 AND 57 THEN 4 ELSE 5 END), title LIMIT #{start},#{perPage}
   </select>
   <select id="searchPlaceByTitleInNation" parameterType="hashmap" resultType="joinPlaceList">  <!--  제목순,전체 -->
      select p.contentId,p.title,p.overview,p.addr1,p.addr2,p.mapX,p.mapY,p.mLevel,p.areaCode,p.linkedURL,p.firstImage,l.likeCount 
       from place p left join (select contentId, count(loginNum) as likeCount from placeLike group by contentId) l on p.contentId=l.contentId 
       ORDER BY (CASE 
      WHEN SUBSTRING(title,1) BETWEEN '가' AND '힣' THEN 1 
      WHEN ASCII(SUBSTRING(title,1)) BETWEEN 65 AND 90 THEN 2 
      WHEN ASCII(SUBSTRING(title,1)) BETWEEN 97 AND 122 THEN 3 
      WHEN ASCII(SUBSTRING(title,1)) BETWEEN 48 AND 57 THEN 4 ELSE 5 END), title LIMIT #{start},#{perPage}
   </select>
   <select id="searchPlaceByLikeInArea" parameterType="hashmap" resultType="joinPlaceList"> <!-- 좋아요순,전체 -->
      select p.contentId,p.title,p.overview,p.addr1,p.addr2,p.mapX,p.mapY,p.mLevel,p.areaCode,p.linkedURL,p.firstImage,l.likeCount
      from place p left join (select contentId, count(loginNum) as likeCount from placeLike group by contentId) l on (p.contentId=l.contentId)
      where areaCode=#{areaCode} order by likeCount desc,p.contentId asc LIMIT #{start},#{perPage}
   </select> 
   <select id="searchPlaceByLikeInNation" parameterType="hashmap" resultType="joinPlaceList"> <!-- 좋아요순,지역태그 -->
      select p.contentId,p.title,p.overview,p.addr1,p.addr2,p.mapX,p.mapY,p.mLevel,p.areaCode,p.linkedURL,p.firstImage,l.likeCount 
       from place p left join (select contentId, count(loginNum) as likeCount from placeLike group by contentId) l on p.contentId=l.contentId 
       order by likeCount desc,p.contentId asc LIMIT #{start},#{perPage}
   </select> 
   
   <!-- 관광지Detail -->
   <select id="getPlaceDetail" parameterType="int" resultType="place">
      select * from place where contentId=#{contentId}
   </select>
   <select id="getPlaceDetailApiPhotos" parameterType="int" resultType="placeApiPhoto">
      select * from placeApiPhoto where contentId=#{contentId} order by placeApiPhotoNum desc
   </select>
   <select id="getPlaceDetailPhotos" parameterType="int" resultType="placePhoto">
      select * from placePhoto where contentId=#{contentId} and approval=1 order by photoNum desc
   </select>
   <select id="getAnswerOfPlace" parameterType="int" resultType="touranswer">
      select * from tourAnswer where contentId=#{contentId} order by regroup asc,relevel asc
   </select>
   <select id="getLikeCountOfPlace" parameterType="int" resultType="int">
   	select count(*) from placeLike where contentId=#{contentId}
   </select>
   
   <!-- 코스담기 -->
   <select id="getCourseByUser" parameterType="int" resultType="course">
      select * from course where userNum=#{userNum}
   </select>
   <insert id="insertPlaceIntoCourse" parameterType="courseplace">
      insert into coursePlace (userNum,courseNum,contentId,orderNum)
      values (#{userNum},#{courseNum},#{contentId},#{orderNum})
   </insert>
   <select id="getMaxOrderNum" parameterType="int" resultType="int">
      select max(orderNum) from coursePlace where coursePlaceNum=#{coursePlaceNum}
   </select>
   
   <!-- 키워드검색 관광지list -->
   <!-- 제목순 -->
   <select id="getTotalCountByKeywordSearch" parameterType="String" resultType="int">
      select count(*) from (select * from place where title LIKE CONCAT('%', #{keyword}, '%') 
      OR addr1 LIKE CONCAT('%', #{keyword}, '%') OR overview LIKE CONCAT('%', #{keyword}, '%')) p
   </select>
   <select id="keywordSearchPlaceByTitle" parameterType="hashmap" resultType="joinPlaceList">
      ((select p.contentId,p.title,p.overview,p.addr1,p.addr2,p.mapX,p.mapY,p.mLevel,p.areaCode,p.linkedURL,p.firstImage,l.likeCount 
          from place p left join (select contentId, count(loginNum) as likeCount from placeLike group by contentId) l on p.contentId=l.contentId 
         where p.title LIKE CONCAT('%', #{keyword}, '%') OR p.addr1 LIKE CONCAT('%', #{keyword}, '%') 
         ORDER BY (CASE 
         WHEN SUBSTRING(title,1) BETWEEN '가' AND '힣' THEN 1 
         WHEN ASCII(SUBSTRING(title,1)) BETWEEN 65 AND 90 THEN 2 
         WHEN ASCII(SUBSTRING(title,1)) BETWEEN 97 AND 122 THEN 3 
         WHEN ASCII(SUBSTRING(title,1)) BETWEEN 48 AND 57 THEN 4 ELSE 5 END), title)
	  union 
	  (select p.contentId,p.title,p.overview,p.addr1,p.addr2,p.mapX,p.mapY,p.mLevel,p.areaCode,p.linkedURL,p.firstImage,l.likeCount 
          from place p left join (select contentId, count(loginNum) as likeCount from placeLike group by contentId) l on p.contentId=l.contentId 
         where p.overview LIKE CONCAT('%', #{keyword}, '%') and p.title not LIKE CONCAT('%', #{keyword}, '%') 
         and p.addr1 not LIKE CONCAT('%', #{keyword}, '%')
         ORDER BY (CASE 
         WHEN SUBSTRING(title,1) BETWEEN '가' AND '힣' THEN 1 
         WHEN ASCII(SUBSTRING(title,1)) BETWEEN 65 AND 90 THEN 2 
         WHEN ASCII(SUBSTRING(title,1)) BETWEEN 97 AND 122 THEN 3 
         WHEN ASCII(SUBSTRING(title,1)) BETWEEN 48 AND 57 THEN 4 ELSE 5 END), title)) LIMIT #{start},#{perPage}
   </select>
   <!-- 인기순 -->
   <select id="keywordSearchPlaceBylike" parameterType="hashmap" resultType="joinPlaceList">
      ((select p.contentId,p.title,p.overview,p.addr1,p.addr2,p.mapX,p.mapY,p.mLevel,p.areaCode,p.linkedURL,p.firstImage,l.likeCount 
          from place p left join (select contentId, count(loginNum) as likeCount from placeLike group by contentId) l on p.contentId=l.contentId 
         where (l.likeCount > 0 and p.title LIKE CONCAT('%', #{keyword}, '%')) OR (l.likeCount > 0 and p.addr1 LIKE CONCAT('%', #{keyword}, '%')) 
         OR (l.likeCount>0 and p.overview LIKE CONCAT('%', #{keyword}, '%')) 
         ORDER BY likeCount desc)
	  union
	  (select p.contentId,p.title,p.overview,p.addr1,p.addr2,p.mapX,p.mapY,p.mLevel,p.areaCode,p.linkedURL,p.firstImage,l.likeCount 
          from place p left join (select contentId, count(loginNum) as likeCount from placeLike group by contentId) l on p.contentId=l.contentId 
         where (l.likeCount is null and p.title LIKE CONCAT('%', #{keyword}, '%')) OR (l.likeCount is null and p.addr1 LIKE CONCAT('%', #{keyword}, '%')) 
         ORDER BY likeCount desc) 
	  union
	  (select p.contentId,p.title,p.overview,p.addr1,p.addr2,p.mapX,p.mapY,p.mLevel,p.areaCode,p.linkedURL,p.firstImage,l.likeCount 
          from place p left join (select contentId, count(loginNum) as likeCount from placeLike group by contentId) l on p.contentId=l.contentId 
         where l.likeCount is null and p.overview LIKE CONCAT('%', #{keyword}, '%') and p.title not LIKE CONCAT('%', #{keyword}, '%') 
         and p.addr1 not LIKE CONCAT('%', #{keyword}, '%')
         ORDER BY likeCount desc)) LIMIT #{start},#{perPage}
   </select>
</mapper>